/**
 * USDT Energy Helper
 * –¢–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è USDT –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ production –¥–∞–Ω–Ω—ã—Ö netts.io
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export class USDTEnergyHelper {
  constructor() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ knowledge base
    const knowledgePath = path.join(__dirname, 'knowledge/usdt-energy-facts.json');
    try {
      const data = fs.readFileSync(knowledgePath, 'utf8');
      this.energyFacts = JSON.parse(data).usdt_transfer_energy;
    } catch (error) {
      console.error('Failed to load USDT energy facts:', error);
      // Fallback –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ—Å—Ç–æ–≤
      this.energyFacts = {
        energy_costs: {
          to_address_with_usdt: { energy: 64285 },
          to_address_without_usdt: { energy: 130285 }
        },
        cost_in_trx: {
          energy_price_sun: 420
        }
      };
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ USDT –Ω–∞ –∞–¥—Ä–µ—Å–µ
   * @param {TronWeb} tronWeb - —ç–∫–∑–µ–º–ø–ª—è—Ä TronWeb
   * @param {string} address - –∞–¥—Ä–µ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {Promise<boolean>} true –µ—Å–ª–∏ –µ—Å—Ç—å USDT
   */
  async hasUSDT(tronWeb, address) {
    try {
      const contract = await tronWeb.contract().at('TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t');
      const balance = await contract.balanceOf(address).call();
      return balance > 0;
    } catch (error) {
      console.error('Error checking USDT balance:', error);
      return false;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ—á–Ω—É—é –æ—Ü–µ–Ω–∫—É —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è USDT –ø–µ—Ä–µ–≤–æ–¥–∞
   * @param {TronWeb} tronWeb - —ç–∫–∑–µ–º–ø–ª—è—Ä TronWeb
   * @param {string} toAddress - –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
   * @param {number} amount - —Å—É–º–º–∞ USDT
   * @returns {Promise<Object>} –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–Ω–µ—Ä–≥–∏–∏
   */
  async getUSDTTransferEnergy(tronWeb, toAddress, amount = 0.001) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ USDT –Ω–∞ –∞–¥—Ä–µ—Å–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
      const hasUSDT = await this.hasUSDT(tronWeb, toAddress);
      
      // –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏
      const energyData = hasUSDT 
        ? this.energyFacts.energy_costs.to_address_with_usdt
        : this.energyFacts.energy_costs.to_address_without_usdt;
      
      const energyRequired = energyData.energy;
      const energyPriceSun = this.energyFacts.cost_in_trx.energy_price_sun;
      const costInTRX = (energyRequired * energyPriceSun) / 1_000_000;
      
      return {
        success: true,
        contractAddress: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t',
        tokenName: 'USDT',
        amount: amount,
        toAddress: toAddress,
        addressHasUSDT: hasUSDT,
        energyRequired: energyRequired,
        energyPriceSun: energyPriceSun,
        costInTRX: costInTRX,
        costInSUN: energyRequired * energyPriceSun,
        description: hasUSDT 
          ? `–û—Ç–ø—Ä–∞–≤–∫–∞ ${amount} USDT –Ω–∞ –∞–¥—Ä–µ—Å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º USDT`
          : `–û—Ç–ø—Ä–∞–≤–∫–∞ ${amount} USDT –Ω–∞ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å (–ø–µ—Ä–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ USDT)`,
        note: hasUSDT
          ? '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∞–¥—Ä–µ—Å–∞ —Å USDT'
          : '–£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç.–∫. —ç—Ç–æ –ø–µ—Ä–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ USDT –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å',
        source: 'netts.io production data',
        lastVerified: this.energyFacts.last_verified
      };
    } catch (error) {
      return {
        success: false,
        error: error.message,
        fallbackEnergy: 65000, // –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        note: '–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏'
      };
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {Object} energyInfo - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç getUSDTTransferEnergy
   * @returns {string} –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   */
  formatEnergyResult(energyInfo) {
    if (!energyInfo.success) {
      return `‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: ${energyInfo.error}\n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${energyInfo.fallbackEnergy} —ç–Ω–µ—Ä–≥–∏–∏`;
    }

    return `üìä **–†–∞—Å—á–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ USDT**

üí∞ **–°—É–º–º–∞:** ${energyInfo.amount} USDT
üìç **–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:** ${energyInfo.toAddress}
${energyInfo.addressHasUSDT ? '‚úÖ' : '‚ö†Ô∏è'} **–°—Ç–∞—Ç—É—Å –∞–¥—Ä–µ—Å–∞:** ${energyInfo.addressHasUSDT ? '–ï—Å—Ç—å USDT' : '–ù–µ—Ç USDT (–ø–µ—Ä–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞)'}

‚ö° **–¢—Ä–µ–±—É–µ—Ç—Å—è —ç–Ω–µ—Ä–≥–∏–∏:** ${energyInfo.energyRequired.toLocaleString()}
üíµ **–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ TRX:** ${energyInfo.costInTRX.toFixed(6)} TRX
üí∏ **–°—Ç–æ–∏–º–æ—Å—Ç—å –≤ SUN:** ${energyInfo.costInSUN.toLocaleString()} SUN

üìù **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** ${energyInfo.note}

üîç **–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö:** ${energyInfo.source}
üìÖ **–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞:** ${energyInfo.lastVerified}`;
  }
}

export default USDTEnergyHelper;